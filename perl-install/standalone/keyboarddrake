#!/usr/bin/perl

use lib qw(/usr/lib/libDrakX);

use standalone;     #- warning, standalone must be loaded very first, for 'explanations'

use interactive;
use keyboard;
use Xconfig::xfree;
use common;
use any;
use c;

local $_ = join '', @ARGV;

/-h/ and die _("usage: keyboarddrake [--expert] [keyboard]\n");

$::expert = /-expert/;

my $in;
my $keyboard = keyboard::read();
if (my ($kb) = grep { !/^-/ } @ARGV) {
    keyboard::KEYBOARD2text($kb) or die "bad keyboard $kb\n";
    $keyboard->{KEYBOARD} = $kb;
} else {
    $in = 'interactive'->vnew('su', 'keyboard');

  begin:
    $::isEmbedded and kill 'USR2', $::CCPID;
  choose:
    $keyboard->{KEYBOARD} = $in->ask_from_listf(_("Keyboard"),
						_("Please, choose your keyboard layout."),
						\&keyboard::KEYBOARD2text,
						[ keyboard::KEYBOARDs() ],
						$keyboard->{KEYBOARD}) or goto end;

    any::keyboard_group_toggle_choose($in, $keyboard) or goto choose;
}

if ($::expert) {
    my $isNotDelete = !$in->ask_yesorno("BackSpace", _("Do you want the BackSpace to return Delete in console?"), 1);
    $keyboard->{BACKSPACE} = $isNotDelete ? "BackSpace" : "Delete";
}

system('loadkeys', keyboard::keyboard2kmap($keyboard));

my $xkb = keyboard::keyboard2xkb($keyboard);
system('setxkbmap', $xkb);

eval {
    my $xfree_conf = Xconfig::xfree->read;
    my $x_kbd_conf = $xfree_conf->get_keyboard;
    $x_kbd_conf->{XkbLayout} = $xkb;
    $xfree_conf->set_keyboard($x_kbd_conf);
    $xfree_conf->write;
};

keyboard::write($keyboard);

end:
if ($::isEmbedded) {
    kill('USR1', $::CCPID);
    $keyboard = '';
    goto begin;
} else {
    $in->exit(0) if $in;
}
