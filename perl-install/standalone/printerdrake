#!/usr/bin/perl

# printerdrake
# Copyright (C) 1999 MandrakeSoft (fpons@mandrakesoft.com)
# Original version for printer configuration from pad.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

use lib qw(/usr/lib/libDrakX);

use standalone;     #- warning, standalone must be loaded very first, for 'explanations'

use interactive;
use printerdrake;
use printer;
use c;

local $_ = join '', @ARGV;

/-h/ and die "usage: printerdrake [--beginner] [--expert] [--auto] [--noauto] [--skiptest] [--testing] [--cups] [--lprng] [--lpd] [--pdq]\n";

$::expert = /-expert/;
$::noauto = /-noauto/;
$::testing = /-testing/;

my $printer;

my $in = 'interactive'->vnew('su', 'printer');

my $commandline = $_;

exit 0 if !printerdrake::first_time_dialog($printer, $in, 1);

{
# Check whether Foomatic is installed and install it if necessary
printerdrake::install_foomatic($in);

my $w = $in->wait_message(_("Printerdrake"), _("Reading printer data ..."));
# Get what was installed before
eval { $printer = printer::getinfo('') };
# Choose the spooler by command line options
$commandline =~ /-cups/ and
    $printer->{SPOOLER} = 'cups' and printer::read_configured_queues($printer);
$commandline =~ /-lpr/ and 
    $printer->{SPOOLER} = 'lpd' and printer::read_configured_queues($printer);
$commandline =~ /-lpd/ and 
    $printer->{SPOOLER} = 'lpd' and printer::read_configured_queues($printer);
$commandline =~ /-lprng/ and 
    $printer->{SPOOLER} ='lprng' and printer::read_configured_queues($printer);
$commandline =~ /-pdq/ and 
    $printer->{SPOOLER} = 'pdq' and printer::read_configured_queues($printer);
-r '/etc/modules.conf' and modules::mergein_conf('/etc/modules.conf');
}

begin:
$::isEmbedded and kill 'USR2', $::CCPID;

printerdrake::main($printer, $in, 1);

$::isEmbedded ? kill('USR1', $::CCPID) : $in->exit(0);
goto begin;
