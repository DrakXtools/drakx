#!/usr/bin/perl

use lib qw(/usr/lib/libDrakX);

use standalone;     #- warning, standalone must be loaded very first, for 'explanations'

use common;
use interactive;
use authentication;
use network::network;

my $net = {};
network::network::read_net_conf($net);

my $in = 'interactive'->vnew('su');

my $authentication = authentication::get();

my $kind = authentication::to_kind($authentication);
my $meta_class = { getVarsFromSh("/etc/sysconfig/system") }->{META_CLASS};
my @kinds = authentication::kinds($in->do_pkgs, $meta_class);

main:
$in->ask_from(N("Authentication"), undef,
	      [ 
	       { label => N("Authentication") },
	       { val => \$kind, type => 'list' , list => \@kinds, format => \&authentication::kind2description_raw },
	      ]) or $in->exit;

authentication::ask_parameters($in, $net, $authentication, $kind) or goto main;

eval { 
    authentication::set($in, $net, $authentication) or goto main;
    network::network::write_network_conf($net); #- for NISDOMAIN
};
if (my $err = $@) {
    $in->ask_warn(N("Error"), formatError($err));
    goto main;
}


$in->exit;
