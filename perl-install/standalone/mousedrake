#!/usr/bin/perl

use lib qw(/usr/lib/libDrakX);

use common qw(:common :system);
use interactive;
use mouse;
use c;
require 'dumpvar.pl';

local $_ = join '', @ARGV;

/-h/ and die "usage: mousedrake [--auto] [--testing]\n";

$::auto = /-auto/;
$::testing = /-testing/;
$::isStandalone = 1;

my $in = vnew interactive('su');

my ($mouse) = mouse::detect() unless $::noauto;

if (!$mouse || !$::auto) {
    $mouse ||= mouse::fullname2mouse("serial|Generic 2 Button Mouse");
    my $name = $in->ask_from_treelistf('', _("Please, choose the type of your mouse."), '|',
				       sub { join '|', map { translate($_) } split '\|', $_[0] },
				       [ mouse::fullnames ], 
				       $mouse->{type} . '|' . $mouse->{name});
    $mouse = mouse::fullname2mouse($name);

    if ($mouse->{device} eq "usbmouse") {
	require pci_probing::main;
	my ($c) = pci_probing::main::probe("serial_usb") or die _("no serial_usb found\n");
	eval { modules::load($c->[1], "serial_usb") };
    }
}
$mouse->{XEMU3} = 'yes' if $mouse->{nbuttons} < 3 && (!$::noauto || $in->ask_yesorno('', _("Emulate third button?"), 1));

$o->{mouse}{device} = 
  $o->ask_from_listf(_("Mouse Port"),
		     _("Please choose on which serial port your mouse is connected to."),
		     \&mouse::serial_port2text,
		     [ mouse::serial_ports ]) if $mouse->{type} eq 'serial';

dumpValue(\$mouse);
mouse::write_conf($mouse);

$in->exit(0);
