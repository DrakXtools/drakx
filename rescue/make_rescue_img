#!/usr/bin/perl

use MDK::Common;
use lib "/usr/lib/libDrakX";
use keyboard;

my $tmp = "/tmp/rescue_tmp";
my $rescue = "rescue.sqfs";

if ($>) {
    $ENV{PATH} = "/sbin:/usr/sbin:$ENV{PATH}";
}

BEGIN { undef *_ }
sub __ { print @_, "\n"; system(@_) }
sub _ { __ @_; $? and die }

_ "rm -rf $tmp" if -e $tmp;
_ "mkdir $tmp";
_ 'find . -name "*~" | xargs rm -f';
_ "cp -a tree/* $tmp";
_ "find $tmp -name .svn | xargs rm -rf";

my $issue = `linux_logo -l`;

$issue .= <<EOF;

		[1;37;40mRescue Disk[0m

$ENV{DISTRIB_DESCR}

Use [1;33;40mloadkeys[0m to change your keyboard layout (eg: loadkeys fr)
Use [1;33;40mmodprobe[0m to load modules (eg: modprobe snd-card-fm801)
Use [1;33;40mdrvinst[0m to install drivers according to detected devices
Use [1;33;40mblkid[0m to list your partitions with types
Use [1;33;40mstartssh[0m to start an ssh daemon
Use [1;33;40mrescue-gui[0m to go back to the rescue menu

EOF

output("$tmp/etc/issue", $issue);

_ "../tools/install-xml-file-list list.xml $tmp";
#lame..
_ "ln $tmp/usr/bin/dropbearmulti $tmp/usr/bin/ssh";
_ "ln $tmp/usr/bin/dropbearmulti $tmp/usr/sbin/dropbear";

# XXX: prevent this from being added to begin with
_ "rm -rf $tmp/usr/share/locale/";

#my %keytable_conflicts;
#my @less_important_keytables = qw(am_old am_phonetic no-dvorak de-latin1);
#foreach (keyboard::loadkeys_files(sub { warn @_ })) {
#    my ($dir, $fname) = (dirname($_), basename($_));
#    my ($name) = $fname =~ /(.*)\.map\.gz/ or next;
#    next if member($name, @less_important_keytables);
#    if (my ($short2, $short) = $name =~ m|((.+?)[\W_][^\W_]*)|) {
#	$keytable_conflicts{$short} && $short2 ne $name and $short = $short2;
#	$keytable_conflicts{$short} and warn("conflict between $keytable_conflicts{$short} and $name for short name $short (choosing the first)\n"), next;
#	$keytable_conflicts{$short} = $name;
	# create the short name based on the long one
#	symlinkf($fname, "$tmp$dir/$short.map.gz");
#    }
#}

foreach (cat_("aliases")) {
    chomp; my ($f, $dest) = split;
    symlink $dest, "$tmp$f";
}

#if (my ($LANGUAGE) = map { if_(/LANGUAGE_(.*)/, $1) } keys %ENV) {
my $LANGUAGE = "C";
    substInFile {
	$_ = "export LANGUAGE=$LANGUAGE\n" . "export LC_ALL=$LANGUAGE\n" if /^#LANGUAGE/;	
    } "$tmp/etc/init.d/rc.stage2";
#}

# shell script, too lazy for anything else..
# simply just take care of stripping any binaries not stripped already
_ "
for f in `find $tmp`; do
    if [ -n \"`file \$f|grep 'not stripped'`\" ]; then
	strip \$f
    fi
done
";

my $MKSQUASHFS_ARGS = $ARGV[0] ? $ARGV[0] : "-comp xz -Xbcj x86";

_ "mksquashfs $tmp $rescue $MKSQUASHFS_ARGS -b 1048576 -no-xattrs -all-root -noappend";
_ "rm -rf $tmp";
