#!/usr/bin/perl

sub cat_ { local *F; open F, $_[0] or $_[1] ? die "cat of file $_[0] failed: $!\n" : return; my @l = <F>; wantarray ? @l : join '', @l }

sub read_already_loaded() {
    foreach (cat_("/proc/modules")) {
	my ($name) = split;
	$conf{$name}{loaded} = 1;
    }
}

sub load_deps($) {
    my ($file) = @_;

    local *F;
    open F, $file or log::l("error opening $file: $!"), return 0;
    foreach (<F>) {
	my ($f, $deps) = split ':';
	push @{$deps{$f}}, split ' ', $deps;
    }
}

sub load {
    my ($name, @options) = @_;
    $name =~ s/\.o//;

    $conf{$name}{loaded} and return;
    eval { load($_, 'prereq') } foreach @{$deps{$name}};

    system("packdrake -x /modules/modules.cz* /tmp $name.o");
    -r "/tmp/$name.o" or die "can't find module $name\n";
    system("/sbin/insmod /tmp/$name.o");
    my $retval = $?;
    system("rm /tmp/$name.o");
    $retval and die("insmod $name failed");
}

!@ARGV || $ARGV[0] =~ /-h/ and die "usage: modprobe <module> [<options...>]\n";

read_already_loaded();
load_deps("/modules/modules.dep");
load(@ARGV);
