#!/usr/bin/perl

# This program will show on stdout yenta_socket stuff from pcitable
# which is not in probe.c

use MDK::Common;

my %probes;
foreach (cat_('probe.c')) {
    if (/^pci_id_t pci_id\[\] = {/ ... /^};/) {
	/^\s*{\s*0x([\da-f]+),\s*0x([\da-f]+),\s*"([^"]*)",\s*"([^"]*)"\s*}/
	  and $probes{"$1$2"} = { vendor => $1, device => $2, driver => $3, name => $4 };
    }
}

require '/usr/bin/merge2pcitable.pl';
my $drivers = read_pcitable("/usr/share/ldetect-lst/pcitable");

my %pcitable = map_each {
    $::a =~ /^(....)(....)/ or die;
    "$1$2" => { vendor => $1, device => $2, driver => $::b->[0], name => $::b->[1] };
} %$drivers;

my @yenta_socket_ids = grep { $pcitable{$_}{driver} eq 'yenta_socket' } keys %pcitable;

if (my @missing_in_probe_c = difference2(\@yenta_socket_ids, [ keys %probes ])) {
    print "Missing in `probe.c':\n",
      map { 
	  my $p = $pcitable{$_};
	  qq(    { 0x$p->{vendor}, 0x$p->{device}, "yenta_socket", "$p->{name}" },\n);
      } sort @missing_in_probe_c;
}

my @res;
foreach my $id (keys %probes) {
    my $p = $probes{$id};
    my $r = $pcitable{$id};
    if (!$r || $r->{driver} ne 'yenta_socket') {
	push @res, qq(0x$p->{vendor}\t0x$p->{device}\t"yenta_socket"\t") . ($r ? $r->{name} : '(COMPLETELY MISSING)') . qq("\n);
    }
    if ($r && $r->{driver} ne 'unknown' && $r->{driver} ne $p->{driver}) {
	warn "WARNING: $id: pcitable:$r->{driver} vs probe.c:$p->{driver}\n";
    }
}
if (@res) {
    print "\n", "Missing in pcitable:\n", sort @res;
}
